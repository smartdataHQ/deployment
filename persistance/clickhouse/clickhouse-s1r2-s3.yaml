apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: "ch"
spec:
  troubleshoot: "yes"
  defaults:
    templates:
        podTemplate: clickhouse-pod
  configuration:
    users:
      default/networks/ip:
        - "::/0"
      default/password_sha256_hex: "da39a3ee5e6b4b0d3255bfef95601890afd80709"
    files:
      config.d/storage_config.xml: |-
        <clickhouse>
          <storage_configuration>
            <disks>
              <s3>
                <type>s3</type>
                <endpoint>https://cxs-ch-backup.s3.eu-west-1.amazonaws.com/chs3/</endpoint>
                <region>eu-west-1</region>
                <use_environment_credentials>true</use_environment_credentials>
                <metadata_path>/var/lib/clickhouse/disks/s3/</metadata_path>
              </s3>
              <s3_cache>
                <type>cache</type>
                <disk>s3</disk>
                <path>/var/lib/clickhouse/disks/s3_cache/</path>
                <max_size>10Gi</max_size>
              </s3_cache>
            </disks>
            <policies>
                <s3_main>
                    <volumes>
                        <main>
                            <disk>s3</disk>
                        </main>
                    </volumes>
                </s3_main>
            </policies>        
          </storage_configuration>        
        </clickhouse>
    clusters:
      - name: ctx-s3
        layout:
          shardsCount: 1
          replicasCount: 1
          replicas:
            - templates:
                podTemplate: clickhouse-pod
    zookeeper:
      nodes:
        - host: zookeeper
          port: 2181
      session_timeout_ms: 30000
      operation_timeout_ms: 10000
      root: "/chs3"
  templates:
    podTemplates:
      - name: clickhouse-pod
        generateName: "{chi}-{cluster}-{host}"
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: "clickhouse.altinity.com/app"
                    operator: In
                    values:
                    - "chop"
                topologyKey: "topology.kubernetes.io/zone"
          volumes:
            - name: local-path
              hostPath:
                path: /data/clickhouse/persistence
                type: DirectoryOrCreate
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: clickhouse
                  key: s3-access
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: clickhouse
                  key: s3-secret
          containers:
            - name: clickhouse-pod
              image: clickhouse/clickhouse-server:23.10.5
              volumeMounts:
                - mountPath: /var/lib/clickhouse
                  name: local-path