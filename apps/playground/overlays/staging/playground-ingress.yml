apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: playground
    annotations:
        # nginx ingress
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/rewrite-target: /$1
        # cert-manager
        ingress.kubernetes.io/ssl-redirect: "true"
        #  cert-manager.io/cluster-issuer: clusterissuer-letsencrypt-production
        # CORS
        ## to support both frontend origin and 'localhost', need 'configuration-snippet' implementation here, because 'cors-allow-origin' field doesn't support multiple originss yet.
        #nginx.ingress.kubernetes.io/configuration-snippet: |
        #    if ($http_origin ~* "^https?://((?:graphql.quicklookup.com)|(?:localhost))") {
        #      set $cors "true";
        #    }
        #    if ($request_method = 'OPTIONS') {
        #      set $cors "${cors}options";
        #    }
        #
        #    if ($cors = "true") {
        #      add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        #      add_header 'Access-Control-Allow-Credentials' 'true' always;
        #      add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, PATCH, OPTIONS' always;
        #      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        #      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        #    }
        #
        #    if ($cors = "trueoptions") {
        #      add_header 'Access-Control-Allow-Origin' "$http_origin";
        #      add_header 'Access-Control-Allow-Credentials' 'true' always;
        #      add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, PATCH, OPTIONS';
        #      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        #      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        #      add_header 'Access-Control-Max-Age' 1728000;
        #      add_header 'Content-Type' 'text/plain charset=UTF-8';
        #      add_header 'Content-Length' 0;
        #      return 204;
        #      return 204;
        #    }

spec:
    rules:
        - host: playground.contextsuite.ai
          http:
              paths:
                  - backend:
                        service:
                            name: playground
                            port:
                                number: 80
                    path: /
                    pathType: Prefix

    tls:
        - hosts:
              - playground.contextsuite.ai
          secretName: wild-contextsuite-ai
